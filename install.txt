Building SuperTuxKart on Windows

To build SuperTuxKart on Windows, follow these instructions:

1. Download and install Visual Studio from the following link: https://visualstudio.microsoft.com/downloads/ . The free Visual Studio Community edition works fine. Remember to select "Desktop development with C++" in the installer.

2. Download the supertuxkart project and rename the folder name as stk-code. Then download the stk-assets by using the two following comment (recommend install powershell on windows) :
git clone https://github.com/supertuxkart/stk-code.git stk-code
svn checkout https://svn.code.sf.net/p/supertuxkart/code/stk-assets stk-assets
Then make sure you put the stk-code folder and stk-assets folder in the same directory, otherwise build will failed. 

3. Download the Windows dependencies package from the following link: https://sourceforge.net/projects/supertuxkart/files/SuperTuxKart%20Dependencies/Windows/ and unpack it. When finished, copy the dependencies directory from windows_64bit directory into the stk-code directory; rename it to [dependencies].

4. Download CMake from the following link: https://cmake.org/download/ , install it; once CMake is installed, double click on the CMake icon on your desktop, and point it towards your stk-code directory in the 'Where is the source code' field; create a new directory called build inside the stk-code directory and point "Where to build the binaries" to that directory.

5. Press 'Configure'; CMake will ask you if it is OK to create the aforementioned directory, press Yes. CMake will then ask you about your version of Visual Studio. Confirm your selection; Please look at the table below to avoid confusion between version numbers and releases of Visual Studio; CMake will begin creating the required files for the build in the directory. If you want to do a 64-bit build, select the version of Visual Studio you installed with "Win64" appended. 

6. When the Configuration is successfully finished, press 'Generate' button which is next to Configure. 

7. Navigate to your build directory and open the SuperTuxKart.sln file; Visual Studio will now load the solution.

8. In the 'Solution Explorer', right click on the supertuxkart project and select "Set as StartUp project".

9. Open the 'Build' menu and select 'Build Solution'; or, press the default keyboard shortcut: CTRL + SHIFT + B to build the solution.

===BrainCo===
If you want to create a installization package for distribution, please follow the instructions

10. use Visual Studio to open the SuperTuxKart.sln file again, change the mode to Release mode and rebuild it again. 

11. Download the NSIS by using the following link: http://nsis.sourceforge.net/Download, install it. 

12. Download the ShellLink plug-in for NSIS by using the following link: http://nsis.sourceforge.net/ShellLink_plug-in ; Unpack it and find the ShellLink.dll file under Plugins directory. 

13. Find the directory of NSIS in your computer; go to Plugins directories of NSIS and copy ShellLink.dll from ShellLink into both x86-ansi folder and x86-unicode folder. 

14. Go back to the stk-code and rename the build folder to build-64 

15. Go the tools directory inside the stk-code, open the windows_installer foler and compile the supertuxkart-64bit.nsi by using NSIS. 

=======================================================================================================================================================================================

Building SuperTuxKart on MacOS

To build SuperTuxKart on MacOS, follow these instuctions:

1. Download and install Visual Studio from the following link: https://visualstudio.microsoft.com/downloads/ . The free Visual Studio Community edition works fine. Remember to select "Desktop development with C++" in the installer.

2. Download the supertuxkart project and rename the folder name as stk-code. Then download the stk-assets by using the two following comment (recommend install powershell on windows) :
git clone https://github.com/supertuxkart/stk-code.git stk-code
svn checkout https://svn.code.sf.net/p/supertuxkart/code/stk-assets stk-assets
Then make sure you put the stk-code folder and stk-assets folder in the same directory, otherwise build will failed. 

3. Install the developer tools, either from the OS X Install DVD or from Apple's website.

4. If you have never built anything before, you have to create /usr/local/include/ first, open termial and type the following command:
sudo mkdir -p /usr/local/include/

5. Symlink the include-folder of OpenGL framework to /usr/local/include/GL (Unix programs have an easier time finding it this way):
sudo ln -s /System/Library/Frameworks/OpenGL.framework/Versions/A/Headers/ /usr/local/include/GL

On OS X 10.9.5, you might need the following workaround:
sudo ln -s `xcrun --show-sdk-path`/usr/include/ /usr/include
sudo ln -s `xcrun --show-sdk-path`/System/Library/Frameworks/OpenGL.framework/Headers/ /usr/local/include/OpenGL

6. Install CMake on your mac 

7. Install homebrew( https://brew.sh/ ). Then install all of the dependencies using homebrew:
brew install libogg
brew install libvorbis
brew install openal-soft
brew install freetype
brew install curl
brew install openssl@1.1
brew install fribidi
brew install glew

8. Go to stk-code directory and excecute the following command in termial to build the stk:

mkdir cmake_build

cd cmake_build

CMAKE_PREFIX_PATH=/usr/local/opt/freetype/:/usr/local/opt/curl/:/usr/local/opt/libogg/:/usr/local/opt/libogg/:/usr/local/opt/libvorbis/:/usr/local/opt/openssl\@1.1/:/usr/local/opt/glew/:/usr/local/opt/fribidi/ /usr/local/opt/cmake/bin/cmake .. -DFREETYPE_INCLUDE_DIRS=/usr/local/opt/freetype/include/freetype2/ -DUSE_SYSTEM_GLEW=1 -DOPENAL_INCLUDE_DIR=/usr/local/opt/openal-soft/include/ -DOPENAL_LIBRARY=/usr/local/opt/openal-soft/lib/libopenal.dylib -DFREETYPE_LIBRARY=/usr/local/opt/freetype/lib/libfreetype.dylib

make

9. By default, the executable that is produced is not ready for distribution. Install https://github.com/auriamg/macdylibbundler and run:
dylibbundler -od -b -x ./bin/SuperTuxKart.app/Contents/MacOS/supertuxkart -d ./bin/SuperTuxKart.app/Contents/libs/ -p @executable_path/../libs/

10. Afterwards, copy the contents of stk-assets into /SuperTuxKart.app/Contents/Resources/data

11. Make sure the data in Resources is not a shortcut. If it is, find the data folder and replace the shortcut as the actual data folder inside the Resources.

12. Now SuperTuxKart.app is ready for distribute. 